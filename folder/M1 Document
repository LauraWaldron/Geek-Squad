CEN4010 Principles of Software Engineering
Summer 2023
6/17/23

        History Table
---------------------------
Milestone 1 | 6 / 17 / 2023
Milestone 1 | 6 / 19 / 2023
---------------------------



Milestone 1 Project Proposal and High-level Description

Geek Squad
Team Number: 2
Laura Waldron        lwaldron2021@fau.edu
Calvert Blair        cblair2018@fau.edu
Jamie Pham           jpham2022@fau.edu
Cale Schad           cschad2019@fau.edu
Nicolas Uribe        nuribe2020@fau.edu
 
1 Executive Summary
A short description of the final project and its key advantages, novelty, and values,
up to 1 page. Make it an executive summary -- think of answering the question of
why you develop this project and target at what market sectors. Assign a product
name to your project. This executive summary should be readable to a general
audience who is not a computer science specialist. The executive summary is also
used to advertise and promote your project.

Executive Summary: Maze Explorers – A Thrilling Adventure in Online Maze Gaming
Maze Explorers is an exciting online free game that invites you on a thrilling adventure in the captivating world of mazes. 
Our project blends innovative technology, immersive gameplay, and stunning visuals to create a gaming experience like no other.
Brace yourself for exhilarating maze explorations and the excitement of discovering hidden treasures! 
Key Advantages: 
Thrilling Gameplay: Maze Explorers provides a selection of mazes that test your intellect and problem-solving abilities. 
Every level presents distinctive challenges and enigmas to solve, guaranteeing a continuous thrill and keeping you engaged throughout the game.
Seamless Online Adventure: Enjoy the exciting world of Maze Explorers seamlessly on any device with an internet connection. 
Whether you're using a computer, tablet, or smartphone, you can easily immerse yourself in captivating maze adventures whenever and wherever you want.
No interruptions, just pure fun exploring mazes!
Skill: The game offers complex levels that get harder as the game goes on.
Conclusion:
Maze Explorers is an enthralling online free game that invites you to embark on thrilling adventures in the world of mazes.
With its thrilling gameplay and seamless online experience, Maze Explorers delivers an immersive and unforgettable gaming experience. 
From casual gamers to educational institutions and potential sponsors, Maze Explorers caters to a wide range of audiences, promising endless 
excitement and discovery. Join us on this maze exploration journey and see if you can master the challenges.

2 Competitive analysis
Analyzing competitive products available today. Present competitors’ features vs.
your planned ones. First, create a table with key features of competitors vs. yours.
Only at very high level, 5-6 entries max. After the table, you must summarize what
are the planned advantages or competitive relationship to what is already available.

Competitors				Ours (Maze Explorers)
Background Music			Background Music
Timer					Timer
One character				Multiple characters
Controls for right, left, up, down	Controls for right, left, up, down
A colored line following the character	No colored line
Randomized maze layouts	                Structured maze layouts
Set theme				Unique theme
Access: Download/Link			Access: Link Only
Errors when completing maze             No errors in completing page

Competitors:
 Maze Game - Escape All the Puzzles at Coolmath Games
 (y8.com)
https://www.crazygames.com/game/just-slide-remastered
https://gamaverse.com/beehive-yourself-game/

3 Data definition
This section serves as the “dictionary” of your document. It defines main terms, data
structures and “items” or “entities” at high or logical (not implementation) level (e.g.
name, meaning, usage, and NOT how the data is stored in memory) so it is easier to
refer to them in the document. Focus on key terms (main data elements, actors,
types of users etc.) specific for your application and not on general well know terms.
These terms and their names must be used consistently from then on in all
documents, user interface, in naming software components and database elements
etc. In later milestones, you will add more implementation details for each item. You
will later expand this section with more details.

Game Players (the people playing the game)
Characters (the individual characters we will create and allow the user to employ)
Maze levels (the two to three pages we will create to have the user travel through the mazes; each one will be different)
Timer (Most likely will be optional for user (on/off) but will measure user progress)

4 Overview, scenarios and use cases
This section describes the project overview (in much more details) and likelihood
usage scenarios of your product from end users’ perspectives. Focus only on main
use cases. Simple text format is OK and preferable – tell us a story about who and
how is the application used. Focus on WHAT users do, their skill level, not on HOW
the system is implemented. You can expand use cases provided in high level
document in future milestones.

This project will encompass a simple maze game that will allow the user to progress through 2 - 3 levels.
The game is essentially a 2D program that is composed of a 5x5 grid with a starting point (user begin position)
and an end point (the goal position). The goal of the game is for the user to move up, down, left, or right to
reach the goal position which will be indicated by a flag. This online application can be accessed or used by anyone 
with a link to the webpage. The purpose of this program is merely for entertainment so anyone of any caliber can
play the game.

5 Initial list of high-level functional requirements
This refers to the high-level functionality that you plan to develop to the best of your
knowledge at this point. Focus on WHAT and not HOW. Keep the users in mind.
Develop these functions to be consistent with use cases and requirements above.
Number each requirement and use these numbers consistently from now on. For
each functionality use 1-5 line description.

1. The user needs to be able to move left, right, up, and down. 
	They should be able to walk in any direction, based on which direction they want to go in the maze.
2. If the user successfully reaches the exit of the maze, indicated by a flag, they will be able to go to the next page.
	Either they will be directly placed at the start of the next maze or they will have some option that allows them to start the next maze.
	If its the latter then the user will be prompted with a question on whether or not they would like to continue or jump to results.
3. The user will be able to time themselves going through the maze. 
	The timer will be located in one corner of the screen (or maybe at the bottom) and the user will be able to start and stop it when 
	they enter the maze. There may also be an option for a non-timed run.
4. The user will be able to choose between three to four different character options. 
	We will create these character options and have a page where the user can choose between the different options.
5. The results page will consist of the users timed run and the amount of moves they made to finish each level.


6 List of non-functional requirements
For example, performance, usability, accessibility, expected load, security
requirements, storage, availability, fault tolerance etc. Number each. When possible,
try to quantify these quality attributes.
1.The game should be accessible for anyone with a web browser (Chrome and Microsoft Edge) and free.
2.The game should be accessible on a mobile device as well as pc.
3.There should be about six to seven pages of content, so the load isn’t too much—one home screen, two or three levels of mazes, 
one character choosing page (which can be reloaded between every maze), and one results page.
4. Pop-up screen when you complete a level.


7 High-level system architecture
Lists of main software products, tools, languages and systems to be used, list of core
APIs available at this point, supported browsers etc.
You also have to decide on which frameworks you will use if any. These provide
both user interface, as well as cross-platform and cross browser layout/css. All
external code you plan to use must be listed along with their license.

1. VSCode
2. Python
3. HTML
4. CSS
5. Javascript
6. Typescript

8 Team
List student group names, name of Scrum master, product owner and initial roles
for each member
Group Name : Geek Squad
Scrum Master: Nicholas Uribe
Product Owner: Laura Waldron
Frontend Team: Laura Waldron and Cale Schad
Backend Team: Calvert Blair, Nicholas Uribe, Jamie Pham


9 Checklist
For each item below you must answer with only one of the following: DONE, ON
TRACK (meaning it will be done on time, and no issues perceived) or ISSUE (you
have some problems, and then define what is the problem with 1-3 lines). Reflect
these items in your Trello project space:
a) Team decided on basic means of communications : Done
b) Team found a time slot to meet outside of the class : On Track
c) Front and back end team leads chosen : Done
d) Github master chosen : Done
e) Team ready and able to use the chosen back and front-end frameworks : Done
f) Skills of each team member defined and known to all : Done
g) Team lead ensured that all team members read the final M1 and
agree/understand it before submission : Done

10 Tasks before submission
Teams must collaborate in creating M1 document by having working M1 document
on their team GitHub repository (similar to managing code) so all team members
can access it. Added advantage of doing it this way is that it builds teamwork and
communication. We recommend having a folder for project documentation on
team’s GitHub where milestones and other similar files can be kept

